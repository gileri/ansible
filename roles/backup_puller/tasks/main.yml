---
- name: Assert that mount names are valid
  assert:
    that: item.name is regex("^[a-zA-Z0-9_]*$")
  loop: "{{ s3_backups }}"

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

- name: Install sshfs
  package:
    name:
      - sshfs

- name: Add kopia key
  apt_key:
    url: https://kopia.io/signing-key
    id: A3B5843ED70529C23162E3687713E6D88ED70D9D

- name: Add apt repo
  apt_repository:
    repo: deb http://packages.kopia.io/apt/ stable main

- name: Install kopia
  apt:
    name: kopia

- name: Create backup puller initiator user
  user:
    name: "{{ backup_puller_initiator_user }}"
  register: backup_puller_initiator_user_info

- name: Check repository status
  command:
    cmd: kopia repository status
  become: true
  become_user: "{{ backup_puller_initiator_user }}"
  changed_when: false
  failed_when: backup_puller_kopa_repository_status.rc > 1
  register: backup_puller_kopa_repository_status

- name: Connect to kopia repository
  command:
    cmd: "kopia repository connect s3 --endpoint={{ backup_puller_kopia_storage.endpoint }} --bucket={{ backup_puller_kopia_storage.bucket }} --access-key={{ backup_puller_kopia_storage.accessKeyID }} --secret-access-key={{ backup_puller_kopia_storage.secretAccessKey }} -p {{ backup_puller_kopia_password}}"
  become: true
  become_user: "{{ backup_puller_initiator_user }}"
  when: backup_puller_kopa_repository_status.rc != 0

- name: Create SSH configuration directory
  file:
    path: "~backup_puller/.ssh"
    state: directory
    mode: 0700
    owner: "{{ backup_puller_initiator_user }}"
    group: "{{ backup_puller_initiator_user }}"

- name: Generate SSH key pair
  openssh_keypair:
    path: "~backup_puller/.ssh/id_rsa"  # TODO discover root home
    owner: "{{ backup_puller_initiator_user }}"
    group: "{{ backup_puller_initiator_user }}"
    mode: 0600

- name: Add targets to known_hosts
  known_hosts:
    key: "{{ item.key }}"
    name: "{{ item.name }}"
    hash_host: true
    path: /etc/ssh/ssh_known_hosts
  loop: "{{ backup_puller_initiator_known_hosts }}"

- name: Add mount units
  template:
    src: templates/backup.mount.j2
    dest: "/etc/systemd/system/run-backup_puller-{{ item.name }}.mount"
    owner: root
    group: root
    mode: 0644
  loop: "{{ s3_backups }}"
  notify: Reload systemd units

- name: Add services
  template:
    src: templates/backup.service.j2
    dest: "/etc/systemd/system/{{ systemd_prefix }}{{ item.name }}.service"
    owner: root
    group: root
    mode: 0644
  loop: "{{ s3_backups }}"
  notify: Reload systemd units

- name: Add timers
  template:
    src: templates/backup.timer.j2
    dest: "/etc/systemd/system/{{ systemd_prefix }}{{ item.name }}.timer"
    owner: root
    group: root
    mode: 0644
  loop: "{{ s3_backups }}"

- name: Start and enable timers
  systemd:
    name: "{{ systemd_prefix }}{{ item.name }}.timer"
    state: started
    enabled: true
    daemon_reload: true
  loop: "{{ s3_backups }}"

- name: Enable target
  systemd:
    name: backups.target
    enabled: true
    daemon_reload: true
