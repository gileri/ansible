---
- name: Create a dedicated user
  group:
    name: "{{ ipfs_group_name }}"

- name: Create a dedicated user
  user:
    name: "{{ ipfs_user_name }}"
    create_home: true
    home: "{{ ipfs_home }}"
    groups: "{{ ipfs_group_name }}"
    append: true

- name: Create a dedicated user
  file:
    path: "{{ ipfs_home }}"
    state: directory
    owner: "{{ ipfs_user_name }}"

- name: Install IPFS
  package:
    name: "{{ ipfs_package_name }}"
  notify: Restart ipfs systemd service

- name: Create ipfs working directory
  file:
    path: "{{ ipfs_path }}"
    state: directory
    owner: "{{ ipfs_user_name }}"
    group: "{{ ipfs_group_name }}"

- name: Create ipfs systemd service override folder
  file:
    path: /etc/systemd/system/ipfs@.service.d/
    state: directory

- name: Set IPFS_PATH in service
  template:
    src: templates/ipfs_path.conf
    dest: /etc/systemd/system/ipfs@.service.d/ipfs_path.conf
  notify:
    - Reload systemd services
    - Restart ipfs systemd service

- name: Copy default configuration
  template:
    src: templates/ipfs_config.json.j2
    dest: "{{ ipfs_path }}/default_config"
    owner: "{{ ipfs_user_name }}"
    group: "{{ ipfs_group_name }}"
    mode: "0600"
  register: default_configuration_copy
  notify: Restart ipfs systemd service

- name: Increase UDP receive buffer size
  sysctl:
    name: net.core.rmem_max
    value: 2500000
    sysctl_file: /etc/sysctl.d/ipfs.conf

- name: Stop IPFS daemon to apply new configuration
  systemd:
    name: "ipfs@{{ ipfs_user_name }}"
    state: stopped
  when: default_configuration_copy.changed is true

- name: Remove previous configuration
  file:
    dest: "{{ ipfs_path }}/config"
    state: absent
  when: default_configuration_copy.changed is true

- name: init IPFS
  become: true
  become_user: "{{ ipfs_user_name }}"
  command: "ipfs init --empty-repo -- {{ ipfs_path }}/default_config"
  args:
    creates: "{{ ipfs_path }}/config"
  environment:
    IPFS_PATH: "{{ ipfs_path }}"
  notify: Restart ipfs systemd service

- name: Start and enable ipfs systemd service
  systemd:
    state: started
    enabled: true
    name: ipfs@{{ ipfs_user_name }}

- name: Allow public access to swarm port in ufw
  ufw:
    rule: allow
    to_port: "4001"
  when: firewall is defined and firewall == "ufw"

- name: Copy gateway nginx configuration
  template:
    src: nginx_gateway.j2
    dest: "/etc/nginx/conf.d/ipfs_gateway.conf"
  notify: Reload nginx
  when: web_server is defined and web_server == 'nginx'

- name: Copy nginx configuration
  template:
    src: nginx_config.j2
    dest: "/etc/nginx/sites-enabled/{{ item.key }}.conf"
  notify: Reload nginx
  when: web_server is defined and web_server == 'nginx'
  loop: "{{ query('dict', ipfs_gateway_sites) }}"
